@using CardBid.Data
@using CardBid.Data.Models
@using CardBid.DataAcessLibrary
@using CardBid.Exceptions
@using Microsoft.EntityFrameworkCore
@using Blazored.LocalStorage
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject CardBidDbContext DbContext
@inject IContaData ContaService

@page "/login"

<div class="flex flex-col justify-center items-center h-screen">
    <h1 class="font-bold text-3xl py-2">Login</h1>
    <div class="flex flex-col space-y-4">
        <input type="text" placeholder="Username" @bind="Username" class="border-black border-2 px-4 py-2 rounded">
        <input type="password" placeholder="Password" @bind="Password" class="border-black border-2 px-4 py-2 rounded">
        <button class="bg-blue-500 text-white px-4 py-2 rounded w-96" @onclick="LoginUser">Login</button>
        @if (!string.IsNullOrEmpty(message))
        {
            <p class="text-red-500">@message</p>
        }
        <a href="">Forgot Password?</a>
        <a href="/register" class="button-like" @onclick="NavigateToRegister">Don't have an account? Signup</a>
    </div>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string message;

    private async Task LoginUser()
    {
        try {
            Conta c = await ContaService.getConta(Username, Password);

            await LocalStorage.SetItemAsync("username", Username);
            await LocalStorage.SetItemAsync("id", c.Utilizador_Id);

            NavigationManager.NavigateTo("/");
        } catch (LoginException) {
            message = "Invalid credentials";
        }
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}
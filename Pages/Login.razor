@using CardBid.Data
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject CardBidDbContext DbContext

@page "/login"

<div class="flex flex-col justify-center items-center h-screen">
    <h1 class="font-bold text-3xl py-2">Login</h1>
    <div class="flex flex-col space-y-4">
        <input type="text" placeholder="Username" @bind="Username" class="border-black border-2 px-4 py-2 rounded">
        <input type="password" placeholder="Password" @bind="Password" class="border-black border-2 px-4 py-2 rounded">
        <button class="bg-blue-500 text-white px-4 py-2 rounded w-96" @onclick="LoginUser">Login</button>
        @if (!string.IsNullOrEmpty(message))
        {
            <p class="text-red-500">@message</p>
        }
        <a href="">Forgot Password?</a>
        <a href="/register" class="button-like" @onclick="NavigateToRegister">Don't have an account? Signup</a>
    </div>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string message;

    private async Task LoginUser()
    {
        // Check credentials against the database
        bool credentialsValid = await CheckCredentialsAsync(Username, Password);

        if (credentialsValid)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            message = "Invalid credentials";
        }
    }

    private async Task<bool> CheckCredentialsAsync(string username, string password)
    {
        // verify if the user exists in the database
        var user = await DbContext.Conta.FirstOrDefaultAsync(c => c.NomeUtilizador == username && c.PalavraPasse == password);

        return user != null;
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}
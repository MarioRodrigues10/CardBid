@page "/card/new"
@using CardBid.DataAcessLibrary
@using CardBid.Data.Models
@using CardBid.Data
@using Blazored.LocalStorage
@inject NavigationManager NavigationManager
@inject CardBidDbContext dbcontext
@inject ICategoriaData categoriaService
@inject IGrauDegradacaoData grauDegradacaoService
@inject ILeiloesData leilaoService
@inject ILocalStorageService LocalStorage

<div class="flex flex-row justify-center space-x-12 py-4 items-center h-fit min-h-screen">
    <div>
    <h1 class="font-bold text-3xl py-2">List for Sale</h1>
    <div class="flex flex-col space-y-4">
        <label class="font-bold" for="title">Title:</label>
        <input type="text" placeholder="Title" @bind="@Title" class="border-black border-2 px-4 py-2 rounded">
        <label class="font-bold" for="name"1>Starting Price:</label>
        <input type="number" @bind="@listingPrice" @oninput="updateBidFee" placeholder="" class="border-black border-2 px-4 py-2 rounded"/>
        <label class="font-bold" for="description">Description:</label>
        <input type="text" placeholder="Description" @bind="Description" class="border-black border-2 px-4 py-2 rounded">
        <label class="font-bold" for="price">Degredation Level:</label>
        <select type="select" placeholder="Level" @bind="Level" class="border-black bg-white border-2 px-4 py-2 rounded">
            @foreach (var level in levels)
            {
                <option>@level</option>
            }
        </select>
        <label class="font-bold" for="image">Final Date:</label>
        <input type="datetime-local" placeholder="Final Date and Time" @bind="dateTime" class="border-black border-2 px-4 py-2 rounded">
        <label class="font-bold" for="image">Collection:</label>
        <select type="select" placeholder="Collection" @bind="Collection" class="border-black bg-white border-2 px-4 py-2 rounded"> 
            @foreach (var collection in collections)
            {
                <option>@collection</option>
            }
        </select>
        <label class="font-bold" for="description">Summary:</label>
        <div class="flex flex-row justify-between border-b-[1px] py-1 border-gray-300">
            <p>Listing Price:</p>
            <p>@listingPrice €</p>
        </div>
        <div class="flex flex-row justify-between border-b-[1px] py-1 border-gray-300">
            <p>Card Bid fee:</p>
            <p>@bidFee €</p>
        </div>
        <div class="flex flex-row justify-between font-bold">
            <p>Total potential earnings:</p>
            <p>@(listingPrice - bidFee) €</p>
        </div>
        <button @onclick="RegisterAuction" class="bg-blue-500 text-white px-4 py-2 rounded w-96">Complete Listing</button>
    </div>
</div>
<div class="bg-red h-full w-50">
    <image src="https://via.placeholder.com/400" />
</div>
</div>

@code {
    private string[] levels;
    private string[] collections;
    private List<GrauDegradacao> gds;

    private int listingPrice = 100;
    private double bidFee = 5;
    DateTime dateTime = DateTime.Now.AddHours(24);
    private string Title;
    private string Description;
    private string Level;
    private string Collection;

    protected override void OnInitialized()
    {
        gds = grauDegradacaoService.GetGrausDegradacao();
        var list_collections = categoriaService.GetCategorias();

        levels = gds.Select(level => level.Designacao).ToArray();
        collections = list_collections.Select(collection => collection.categoria).ToArray();

        Level = levels[0];
        Collection = collections[0];
    }

    private void updateBidFee() {
        bidFee = listingPrice * 0.05;
    }

    private async void RegisterAuction()
    {
        var vendedor = await LocalStorage.GetItemAsync<int>("id");

        var l = new Leiloes {
            DataLimite = dateTime,
            PrecoInicial = listingPrice,
            BidFee = (decimal) bidFee,
            Estado = "Pendente",
            GrauDeDegradacao = gds.First(level => level.Designacao == Level).grauDegradacao,
            Descricao = Description,
            VendedorId = vendedor,
            Categoria = Collection,
            Titulo = Title
        };

        await leilaoService.AddLeilao(l);

        NavigateToHome();
    }

    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }
}
@page "/restorepassword/{Id:int}"
@using CardBid.Data
@using CardBid.Data.Models
@using CardBid.DataAcessLibrary
@using CardBid.Exceptions
@using Microsoft.EntityFrameworkCore
@using Blazored.LocalStorage
@inject IJSRuntime JSRuntime
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject CardBidDbContext DbContext
@inject IContaData ContaService


<div class="flex flex-col justify-center items-center h-screen">
    <h1 class="font-bold text-3xl py-2">Restore Password</h1>
    <div class="flex flex-col space-y-4">
        <input type="password" placeholder="New Password" @bind="NewPassword" class="border-black border-2 px-4 py-2 rounded">
        <input type="password" placeholder="Confirm Password" @bind="ConfirmPassword" class="border-black border-2 px-4 py-2 rounded">
        <button class="bg-blue-500 text-white px-4 py-2 rounded w-96" @onclick="RestorePass">Restore</button>
        @if (!string.IsNullOrEmpty(message))
        {
            <p class="text-red-500">@message</p>
        }
    </div>
</div>

@code{
    [Parameter]
    public int Id { get; set; }
    private string NewPassword { get; set; }
    private string ConfirmPassword { get; set; }
    private string message { get; set; }

    public async Task RestorePass()
    {
        if (NewPassword != ConfirmPassword)
        {
            message = "Passwords do not match";
            return;
        }

        var conta = await ContaService.UpdatePass(Id, NewPassword);

        if (conta != null)
        {
            NavigationManager.NavigateTo("/login");
        }
    }

    
}